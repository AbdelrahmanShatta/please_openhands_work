name: Auto Code Quality Review & Merge

permissions:
  contents: write
  issues: write
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  call-openhands-resolver:
    name: AI Code Quality Review
    uses: All-Hands-AI/OpenHands/.github/workflows/openhands-resolver.yml@main
    continue-on-error: true  # Ensure subsequent jobs run even if this fails
    with:
      macro: "@quality-check"
      max_iterations: 10
      LLM_MODEL: "anthropic/claude-3-5-sonnet-20241022"
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      PAT_USERNAME: ${{ secrets.PAT_USERNAME }}
      LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
      LLM_BASE_URL: ${{ secrets.LLM_BASE_URL }}

  run-tests:
    needs: call-openhands-resolver
    runs-on: ubuntu-latest
    # Only run tests if quality check succeeded
    if: needs.call-openhands-resolver.result == 'success'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install
      - name: Run tests
        run: poetry run pytest --forked -n auto --cov=openhands --cov-report=xml -svv ./tests/unit
      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  auto-merge:
    needs: [call-openhands-resolver, run-tests]
    runs-on: ubuntu-latest
    # Only merge if both quality check and tests succeeded
    if: |
      needs.call-openhands-resolver.result == 'success' &&
      needs.call-openhands-resolver.outputs.quality_result == 'GOOD' &&
      needs.run-tests.result == 'success'
    steps:
      - uses: peter-evans/merge-pull-request@v3
        with:
          merge_method: squash
          commit_title: "Auto-merged via AI code quality check"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  handle-rejection:
    needs: [call-openhands-resolver, run-tests]
    runs-on: ubuntu-latest
    if: always()  # Always run to handle both success and failure cases
    steps:
      - name: Handle quality check failure
        if: |
          needs.call-openhands-resolver.result != 'success' ||
          (needs.call-openhands-resolver.outputs.quality_result != 'GOOD' && needs.call-openhands-resolver.result == 'success')
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: "‚ùå PR rejected. Reason: " + (
               
