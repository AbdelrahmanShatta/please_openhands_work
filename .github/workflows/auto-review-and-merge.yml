name: Auto Code Quality Review & Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  # Call the reusable OpenHands resolver workflow.
  call-openhands-resolver:
    uses: All-Hands-AI/OpenHands/.github/workflows/openhands-resolver.yml@main
    with:
      macro: "@quality-check"
      max_iterations: 10
      LLM_MODEL: "anthropic/claude-3-5-sonnet-20241022"
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      PAT_USERNAME: ${{ secrets.PAT_USERNAME }}
      LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
      LLM_BASE_URL: ${{ secrets.LLM_BASE_URL }}
    # It is assumed that the reusable workflow sets an output named quality_result.
    # For example, it may output "GOOD" or "BAD" based on its evaluation.
  
  # Run tests after the resolver job completes.
  run-tests:
    needs: call-openhands-resolver
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          pip install poetry
          poetry install

      - name: Build Environment
        run: make build

      - name: Run Generated Tests
        run: |
          poetry run pytest --forked -n auto --cov=openhands --cov-report=xml -svv ./tests/unit

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # If the quality check output is GOOD, auto-merge the PR.
  auto-merge:
    needs: call-openhands-resolver
    if: needs.call-openhands-resolver.outputs.quality_result == 'GOOD'
    runs-on: ubuntu-latest
    steps:
      - name: Auto Merge PR
        uses: peter-evans/merge-pull-request@v3
        with:
          merge_method: squash
          commit_title: "Auto-merged via AI code quality check"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  # If the quality check output is not GOOD, post a comment to reject the PR.
  reject-pr:
    needs: call-openhands-resolver
    if: needs.call-openhands-resolver.outputs.quality_result != 'GOOD'
    runs-on: ubuntu-latest
    steps:
      - name: Post Comment Rejecting PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: "‚ùå The code quality review failed. Please revise your changes to meet the required standards."
            })
